//+++++++++++++++++++++++++++++++++++++++++++++++++++++
// File automatically generated by Jfuzzy - DO NOT EDIT
//+++++++++++++++++++++++++++++++++++++++++++++++++++++

package pkg;

import xfuzzy.lang.*;

public class xfl_mf_parametric extends ParamMemFunc {
 public xfl_mf_parametric() {
   super.parameter = new Parameter[0];
   super.name = "parametric";
   super.pkg = "xfl";
  }

 public double compute(double x) {
 return 0; 
  }

 public double greatereq(double x) {
 return 0; 
  }

 public double smallereq(double x) {
 return 0; 
  }

 public boolean test () {
   return true;
  }

 public String toJava() {
   String eol = System.getProperty("line.separator", "\n");
   String code = "";
   code += "  private class MF_xfl_parametric extends InnerMembershipFunction {"+eol;
   code += "   double param[];"+eol;
   code += eol+"   MF_xfl_parametric( double min, double max, double step, double param[]) {"+eol;
   code += "    super.min = min;"+eol;
   code += "    super.max = max;"+eol;
   code += "    super.step = step;"+eol;
   code += "    this.param = param;"+eol;
   code += "   }"+eol;
   code += "   double param(int _i) {"+eol;
   code += "    return param[_i];"+eol;
   code += "   }"+eol;
   code += "   double isEqual(double x) {"+eol;
   code += "    return 0; "+eol;
   code += "   }"+eol;
   code += "   double isGreaterOrEqual(double x) {"+eol;
   code += "    return 0; "+eol;
   code += "   }"+eol;
   code += "   double isSmallerOrEqual(double x) {"+eol;
   code += "    return 0; "+eol;
   code += "   }"+eol;
   code += "  }"+eol;
   return code;
  }

 public String toC() {
   String eol = System.getProperty("line.separator", "\n");
   String code = "";
   code += "static double MF_xfl_parametric_equal(MembershipFunction _mf,double x) {"+eol;
   code += "  return 0; "+eol;
   code += "}"+eol;
   code += "static double MF_xfl_parametric_greq(MembershipFunction _mf,double x) {"+eol;
   code += "  return 0; "+eol;
   code += "}"+eol;
   code += "static double MF_xfl_parametric_smeq(MembershipFunction _mf,double x) {"+eol;
   code += "  return 0; "+eol;
   code += "}"+eol;
   code += "static MembershipFunction createMF_xfl_parametric( double min, double max, double step, double *param,int length) {"+eol;
   code += " int i;"+eol;
   code += " MembershipFunction _mf;"+eol;
   code += " _mf.min = min;"+eol;
   code += " _mf.max = max;"+eol;
   code += " _mf.step = step;"+eol;
   code += " _mf.param = (double*) malloc(length*sizeof(double));"+eol;
   code += " for(i=0;i<length;i++) _mf.param[i] = param[i];"+eol;
   code += " _mf.compute_eq = MF_xfl_parametric_equal;"+eol;
   code += " _mf.compute_greq = MF_xfl_parametric_greq;"+eol;
   code += " _mf.compute_smeq = MF_xfl_parametric_smeq;"+eol;
   code += " _mf.center = _defaultMFcenter;"+eol;
   code += " _mf.basis = _defaultMFbasis;"+eol;
   code += " return _mf;"+eol;
   code += "}"+eol;
   return code;
  }
 public String toCpp(String name) {
   String eol = System.getProperty("line.separator", "\n");
   String code = "";
   code += name+"::"+name+"(double min,double max,double step,double *param, int length) :"+eol;
   code += "ParamMembershipFunction(min,max,step) {"+eol;
   code += " this->name = \""+name+"\";"+eol;
   code += " this->length = length;"+eol;
   code += " this->parameter = new double[length];"+eol;
   code += " for(int i=0; i<length; i++) this->parameter[i] = param[i];"+eol;
   code += "}"+eol+eol;
   code += name+" * "+name+"::dup() {"+eol;
   code += " return new "+name+"(min,max,step,parameter,length);"+eol;
   code += "}"+eol+eol;
   code += "double "+name+"::param(int _i) {"+eol;
   code += " return parameter[_i];"+eol;
   code += "}"+eol+eol;
   code += "double "+name+"::compute_eq(double x) {"+eol;
   code += "  return 0; "+eol;
   code += "}"+eol+eol;
   code += "double "+name+"::compute_greq(double x) {"+eol;
   code += "  return 0; "+eol;
   code += "}"+eol+eol;
   code += "double "+name+"::compute_smeq(double x) {"+eol;
   code += "  return 0; "+eol;
   code += "}"+eol+eol;
   return code;
  }

 public String toHpp(String name) {
   String eol = System.getProperty("line.separator", "\n");
   String code = "";
   code += "class "+name+": public ParamMembershipFunction {"+eol;
   code += "private:"+eol;
   code += " double *parameter;"+eol;
   code += " int length;"+eol;
   code += eol+"public:"+eol;
   code += " "+name+"() {};"+eol;
   code += " virtual ~"+name+"() { delete parameter; };"+eol;
   code += " "+name+"(double min,double max,double step,double *param, int length);"+eol;
   code += " "+name+"*dup();"+eol;
   code += " virtual double param(int _i);"+eol;
   code += " virtual double compute_eq(double x);"+eol;
   code += " virtual double compute_greq(double x);"+eol;
   code += " virtual double compute_smeq(double x);"+eol;
   code += "};"+eol+eol;
   return code;
  }

//+++++++++++++++++++
 public void set(double p[]) throws XflException {
  super.parameter = new Parameter[p.length];
  for(int i=0;i<super.parameter.length;i++) {
   super.parameter[i] = new Parameter("p"+i);
   super.parameter[i].value = p[i];
  }
 }
//+++++++++++++++++++
}
